{"version":3,"sources":["webpack:///./src/pages/cover.js","webpack:///./src/components/bgwrapper.js","webpack:///./src/components/SideNavbar.js","webpack:///./src/components/header-menu.js"],"names":["GridContainer","GridText","GridImg","GridHeader","data","style","position","top","msTransform","transform","color","padding","margin","type","value","backgroundColor","border","zIndex","fluid","file","childImageSharp","query","Wrapper","children","styles","SideNav","p","open","SideNavCover","SideBarItem","SideMenu","LinkSide","props","to","boxShadow","fontSize","width","activeStyle","SideNavbar","isMobileNavFolded","onMobileNavToggle","onClick","TopContainer","MenuItem","MenuItemResp","Menu","PageName","ListLink","HeaderMenu","state","toggleMobileNav","setState","prevState","onRouteChange","render","this","id","textShadow","backgroundImage","PureComponent"],"mappings":"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","file":"component---src-pages-cover-js-335938b3e49ad025a8db.js","sourcesContent":["import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { css } from \"@emotion/core\"\nimport Img from \"gatsby-image\"\nimport { graphql } from \"gatsby\"\nimport HeaderMenu from \"../components/header-menu\"\nimport bgWrapper from \"../components/bgwrapper\"\nimport { StaticQuery } from \"gatsby\"\n\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-rows: 75% 15% 10%;\n  grid-template-columns: 36% 64%;\n  background-color:transparent;\n`\nconst GridText = styled.div`\n    grid-area: 1 / 2/ 3 / 2;\n    background-color:black;\n`\nconst GridImg = styled.div`\n    grid-area: 1 / 1 / 3 / 1;\n    background: linear-gradient(to right, rgba(255, 255, 255, 0), rgba(0, 0, 0, 1));\n`\nconst GridHeader = styled.div`\n    grid-area: 3 / 1 / 3 / 3;\n`\n\n\n\n  \nexport default ({ data }) => ( \n    <div>\n        <bgWrapper>\n            <GridContainer>\n                <GridText><div style={{position: 'relative', top: '50%', msTransform: 'translateY(-50%)', transform: 'translateY(-50%)'}}><h3 style={{color:'#FFC0A0', padding:'1rem', margin: '0'}}>Hello! I am a software developer with skills in both backend and frontend web technologies. I can design and build web applications and web pages to suit the requirements of your bussiness.</h3>\n                <input type=\"button\" value=\"See More\" style={{color: '#FFC0A0', backgroundColor:'transparent', border: '2px solid #FFC0A0', margin:'15px'}}></input></div></GridText> \n                <GridImg><Img style={{zIndex:'-1', position: 'relative'}} fluid={data.file.childImageSharp.fluid} /></GridImg>\n                <GridHeader><HeaderMenu></HeaderMenu></GridHeader>\n            </GridContainer>\n        </bgWrapper>\n        <div style={{backgroundColor: 'white', padding: '15px'}}>\n            <h3>Why to have web presence?</h3>\n        </div>\n    </div>\n)\n\n\nexport const query = graphql`\n  query {\n    file(relativePath: { eq: \"images/IMG_1542.jpg\" }) {\n      childImageSharp {\n        # Specify the image processing specifications right in the query.\n        # Makes it trivial to update as your page's design changes.\n        fluid(maxWidth: 1512) {\n            # Choose either the fragment including a small base64ed image, a traced placeholder SVG, or one without.\n            aspectRatio \n            src \n            srcSet \n            sizes\n            ...GatsbyImageSharpFluid_noBase64\n          }\n      }\n    }\n  }\n`\n\n\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\nimport { Global, css } from \"@emotion/core\"\n\n\nconst Wrapper = styled(\"div\")`\n  \n  position: relative;\n`\nexport default ({ children }) => (\n  <Wrapper>\n    <Global\n      styles={css`\n        html {\n          scroll-behavior: smooth;\n          transition: 0.5s;\n          background-color: black;\n        }\n      `}\n    />\n    {children}\n  </Wrapper>\n)","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport { css } from \"@emotion/core\"\nimport BgWrapper from \"./bgwrapper\"\n\n\nconst SideNav = styled.div`\n    height: 100%; \n    position: fixed;\n    z-index: 2; \n    top: 0;\n    left: 0;\n    background-color: #FF7733; \n    overflow-x: hidden; \n    padding-top: 2rem; \n    transition: 0.5s; \n    ${p => p.open ? css`\n      width: 200px;\n  ` : css`\n      width: 0px;\n  `}\n\n`\n\nconst SideNavCover = styled.div`\n    transition: 0.5s; \n    width:100%;\n    height:100%;\n    left:0;\n    position: fixed;\n    top: 0; \n    z-index: 1; \n    display:block;\n    ${p => p.open ? css`\n      visibility: visible;\n      background-color: rgba(0,0,0,0.9);\n]     \n  ` : css`\n      background-color: rgba(0,0,0,0);\n      visibility: hidden;\n  `}\n`\nconst SideBarItem = styled.li`\n    padding: 4px 8px 4px 24px;\n    color: #FF7733;\n    display: block;\n    transition: 0.3s;\n    white-space: nowrap;\n    \n   \n\n`\nconst SideMenu = styled.ul`\n    list-style: none;\n`\n\n\nconst LinkSide = props => (\n    <SideBarItem>\n      <Link to={props.to} style={{color:'#FF7733', padding:'0.5rem', boxShadow:'none', backgroundColor:'#FFC0A0', fontSize:'1.3rem', width:'100%'}} activeStyle={{ backgroundColor: \"#FFF0A0\"}}>{props.children}</Link>\n    </SideBarItem>\n  )\n\n  const SideNavbar = props => {\n    const {\n      isMobileNavFolded,\n      onMobileNavToggle,\n    } = props\n  \n    return (\n      \n      <BgWrapper>\n        <SideNavCover onClick={onMobileNavToggle} open={!isMobileNavFolded}></SideNavCover>\n        <SideNav onClick={onMobileNavToggle} open={!isMobileNavFolded}>\n          <SideMenu>\n            <LinkSide to=\"/\">Home</LinkSide>\n            <LinkSide to=\"/projects/\">Projects</LinkSide>\n            <LinkSide to=\"/about/\">About</LinkSide>\n            <LinkSide to=\"/contact/\">Contact</LinkSide>\n          </SideMenu>\n        </SideNav>\n        \n      </BgWrapper>\n    )\n  }\n  \n  export default SideNavbar","import React, { PureComponent, useRef } from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport SideNav from './SideNavbar'\n\nconst breakpoints = [600, 768, 992, 1200]\n\n// const mq = breakpoints.map(\n//   bp => css`@media (min-width: ${bp}px)`\n// )\n\nconst TopContainer = styled.div`\n  margin: auto;\n  padding: 1rem;\n  background-color: #FF7733;\n  width:100%;\n  height:100%;\n  \n`\nconst MenuItem = styled.li`\n    display: none;\n    margin-right: 1rem;\n    max-width: 600px;\n    padding: 0.1rem;\n    @media (min-width: 601px) {\n        display: inline;\n      }\n`\nconst MenuItemResp = styled.li`\n    display: none;\n    margin-right: 1rem;\n    padding: 0.5rem;\n    @media (max-width: 600px) {\n        display: inline;\n    }\n    cursor: pointer;\n    color: #FF7733;\n    background-color: #FFC0A0;\n`\nconst Menu = styled.ul`\n    list-style: none;\n    float: right;\n`\nconst PageName = styled.h3`\n    display: inline;\n    color: #FFF0A0;\n`\n\n\nconst ListLink = props => (\n  <MenuItem>\n    <Link to={props.to} style={{ color:'#FF7733', boxShadow:'none', backgroundColor:'#FFC0A0', padding:'0.5rem'}} activeStyle={{ backgroundColor: \"#FFF0A0\"}}>{props.children}</Link>\n  </MenuItem>\n)\n\n\nclass HeaderMenu extends PureComponent {\n    state = {\n      isMobileNavFolded: true,\n    }\n  \n    toggleMobileNav = () => {\n      this.setState(prevState => ({\n        isMobileNavFolded: !prevState.isMobileNavFolded,\n      }))\n    }\n  \n    onRouteChange = () => {\n      this.setState({\n        isMobileNavFolded: true,\n      })\n    }\n  \n    render() {\n      const { isMobileNavFolded } = this.state\n      \n      return (\n        <TopContainer id='header'>    \n            <header >\n                <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none`, boxShadow:'none'}}>\n                    <PageName>Jeisson Zambrano</PageName>\n                </Link>\n                <Menu>\n                    <ListLink to=\"/\">Home</ListLink>\n                    <ListLink to=\"/projects/\">Projects</ListLink>\n                    <ListLink to=\"/about/\">About</ListLink>\n                    <ListLink to=\"/contact/\">Contact</ListLink>\n                    <MenuItemResp onClick={this.toggleMobileNav}>Menu</MenuItemResp>\n                </Menu>\n                <SideNav\n                    isMobileNavFolded={isMobileNavFolded}\n                    onMobileNavToggle={this.toggleMobileNav}\n                />\n                {this.props.children}\n            </header>\n        </TopContainer>\n      )\n    }\n  }\n  \n  export default HeaderMenu\n  \n\n"],"sourceRoot":""}